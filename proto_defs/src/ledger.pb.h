/* Automatically generated nanopb header */
/* Generated by nanopb-0.4.5 */

#ifndef PB_PARTICLE_FIRMWARE_LEDGER_PB_H_INCLUDED
#define PB_PARTICLE_FIRMWARE_LEDGER_PB_H_INCLUDED
#include <pb.h>
#include "common/ledger.pb.h"

#if PB_PROTO_HEADER_VERSION != 40
#error Regenerate this file with the current version of nanopb generator.
#endif

/* Struct definitions */
/* *
 Ledger info. */
typedef struct _particle_firmware_LedgerInfo { 
    char name[33]; /* /< Ledger name. */
    particle_ledger_LedgerScope scope; /* /< Ledger scope. */
    particle_ledger_SyncDirection sync_direction; /* /< Sync direction. */
    /* *
 Last time the ledger was updated, in milliseconds since the Unix epoch.

 If 0, the time is unknown. */
    uint64_t last_updated; 
    /* *
 Last time the ledger was synchronized with the Cloud, in milliseconds since the Unix epoch.

 If 0, the ledger has never been synchronized. */
    uint64_t last_synced; 
    bool sync_pending; /* /< Whether the ledger has local changes that need to be synchronized. */
} particle_firmware_LedgerInfo;


#ifdef __cplusplus
extern "C" {
#endif

/* Initializer values for message structs */
#define particle_firmware_LedgerInfo_init_default {"", _particle_ledger_LedgerScope_MIN, _particle_ledger_SyncDirection_MIN, 0, 0, 0}
#define particle_firmware_LedgerInfo_init_zero   {"", _particle_ledger_LedgerScope_MIN, _particle_ledger_SyncDirection_MIN, 0, 0, 0}

/* Field tags (for use in manual encoding/decoding) */
#define particle_firmware_LedgerInfo_name_tag    1
#define particle_firmware_LedgerInfo_scope_tag   2
#define particle_firmware_LedgerInfo_sync_direction_tag 3
#define particle_firmware_LedgerInfo_last_updated_tag 4
#define particle_firmware_LedgerInfo_last_synced_tag 5
#define particle_firmware_LedgerInfo_sync_pending_tag 6

/* Struct field encoding specification for nanopb */
#define particle_firmware_LedgerInfo_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, STRING,   name,              1) \
X(a, STATIC,   SINGULAR, UENUM,    scope,             2) \
X(a, STATIC,   SINGULAR, UENUM,    sync_direction,    3) \
X(a, STATIC,   SINGULAR, FIXED64,  last_updated,      4) \
X(a, STATIC,   SINGULAR, FIXED64,  last_synced,       5) \
X(a, STATIC,   SINGULAR, BOOL,     sync_pending,      6)
#define particle_firmware_LedgerInfo_CALLBACK NULL
#define particle_firmware_LedgerInfo_DEFAULT NULL

extern const pb_msgdesc_t particle_firmware_LedgerInfo_msg;

/* Defines for backwards compatibility with code written before nanopb-0.4.0 */
#define particle_firmware_LedgerInfo_fields &particle_firmware_LedgerInfo_msg

/* Maximum encoded size of messages (where known) */
#define particle_firmware_LedgerInfo_size        58

#ifdef __cplusplus
} /* extern "C" */
#endif

#endif
