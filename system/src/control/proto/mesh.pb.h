/* Automatically generated nanopb header */
/* Generated by nanopb-0.4.5 */

#ifndef PB_PARTICLE_CTRL_MESH_MESH_PB_H_INCLUDED
#define PB_PARTICLE_CTRL_MESH_MESH_PB_H_INCLUDED
#include <pb.h>
#include "extensions.pb.h"
#include "common.pb.h"

#if PB_PROTO_HEADER_VERSION != 40
#error Regenerate this file with the current version of nanopb generator.
#endif

/* Enum definitions */
typedef enum _particle_ctrl_mesh_DiagnosticType { 
    particle_ctrl_mesh_DiagnosticType_MAC_EXTENDED_ADDRESS = 0, 
    particle_ctrl_mesh_DiagnosticType_RLOC = 1, 
    particle_ctrl_mesh_DiagnosticType_MAC_ADDRESS = 1, 
    particle_ctrl_mesh_DiagnosticType_MODE = 2, 
    particle_ctrl_mesh_DiagnosticType_TIMEOUT = 3, 
    particle_ctrl_mesh_DiagnosticType_CONNECTIVITY = 4, 
    particle_ctrl_mesh_DiagnosticType_ROUTE64 = 5, 
    particle_ctrl_mesh_DiagnosticType_LEADER_DATA = 6, 
    particle_ctrl_mesh_DiagnosticType_NETWORK_DATA = 7, 
    particle_ctrl_mesh_DiagnosticType_IPV6_ADDRESS_LIST = 8, 
    particle_ctrl_mesh_DiagnosticType_MAC_COUNTERS = 9, 
    particle_ctrl_mesh_DiagnosticType_BATTERY_LEVEL = 14, 
    particle_ctrl_mesh_DiagnosticType_SUPPLY_VOLTAGE = 15, 
    particle_ctrl_mesh_DiagnosticType_CHILD_TABLE = 16, 
    particle_ctrl_mesh_DiagnosticType_CHANNEL_PAGES = 17, 
    particle_ctrl_mesh_DiagnosticType_TYPE_LIST = 18, 
    particle_ctrl_mesh_DiagnosticType_MAX_CHILD_TIMEOUT = 19 
} particle_ctrl_mesh_DiagnosticType;

typedef enum _particle_ctrl_mesh_DiagnosticInfo_Mode { 
    particle_ctrl_mesh_DiagnosticInfo_Mode_INVALID = 0, 
    particle_ctrl_mesh_DiagnosticInfo_Mode_RECEIVER_ON_WHEN_IDLE = 16, 
    particle_ctrl_mesh_DiagnosticInfo_Mode_SECURE_DATA_REQUESTS = 32, 
    particle_ctrl_mesh_DiagnosticInfo_Mode_DEVICE_TYPE = 48, 
    particle_ctrl_mesh_DiagnosticInfo_Mode_DEVICE_TYPE_FTD = 48, 
    particle_ctrl_mesh_DiagnosticInfo_Mode_NETWORK_DATA = 64, 
    particle_ctrl_mesh_DiagnosticInfo_Mode_NETWORK_DATA_FULL = 64 
} particle_ctrl_mesh_DiagnosticInfo_Mode;

typedef enum _particle_ctrl_mesh_DiagnosticInfo_RoutePreference { 
    particle_ctrl_mesh_DiagnosticInfo_RoutePreference_MEDIUM = 0, 
    particle_ctrl_mesh_DiagnosticInfo_RoutePreference_HIGH = 1, 
    particle_ctrl_mesh_DiagnosticInfo_RoutePreference_LOW = -1 
} particle_ctrl_mesh_DiagnosticInfo_RoutePreference;

typedef enum _particle_ctrl_mesh_DiagnosticInfo_NetworkData_BorderRouter_BorderRouterEntry_Flags { 
    particle_ctrl_mesh_DiagnosticInfo_NetworkData_BorderRouter_BorderRouterEntry_Flags_NONE = 0, 
    particle_ctrl_mesh_DiagnosticInfo_NetworkData_BorderRouter_BorderRouterEntry_Flags_PREFERRED = 1, 
    particle_ctrl_mesh_DiagnosticInfo_NetworkData_BorderRouter_BorderRouterEntry_Flags_SLAAC = 2, 
    particle_ctrl_mesh_DiagnosticInfo_NetworkData_BorderRouter_BorderRouterEntry_Flags_DHCP = 4, 
    particle_ctrl_mesh_DiagnosticInfo_NetworkData_BorderRouter_BorderRouterEntry_Flags_CONFIGURE = 8, 
    particle_ctrl_mesh_DiagnosticInfo_NetworkData_BorderRouter_BorderRouterEntry_Flags_DEFAULT_ROUTE = 16, 
    particle_ctrl_mesh_DiagnosticInfo_NetworkData_BorderRouter_BorderRouterEntry_Flags_ON_MESH = 32, 
    particle_ctrl_mesh_DiagnosticInfo_NetworkData_BorderRouter_BorderRouterEntry_Flags_ND_DNS = 64 
} particle_ctrl_mesh_DiagnosticInfo_NetworkData_BorderRouter_BorderRouterEntry_Flags;

typedef enum _particle_ctrl_mesh_GetNetworkDiagnosticsRequest_Flags { 
    particle_ctrl_mesh_GetNetworkDiagnosticsRequest_Flags_INVALID = 0, 
    particle_ctrl_mesh_GetNetworkDiagnosticsRequest_Flags_QUERY_CHILDREN = 1, 
    particle_ctrl_mesh_GetNetworkDiagnosticsRequest_Flags_RESOLVE_DEVICE_ID = 2 
} particle_ctrl_mesh_GetNetworkDiagnosticsRequest_Flags;

/* Struct definitions */
/* Result codes:
 NO_MEMORY: No memory available to add the joiner
 INVALID_STATE: The commissioner role is not started
 NOT_ALLOWED: The client is not authenticated */
typedef struct _particle_ctrl_mesh_AddJoinerReply { 
    char dummy_field;
} particle_ctrl_mesh_AddJoinerReply;

/* Result codes:
 NOT_FOUND: The device is not a member of a network
 NOT_ALLOWED: Invalid commissioning credential */
typedef struct _particle_ctrl_mesh_AuthReply { 
    char dummy_field;
} particle_ctrl_mesh_AuthReply;

/* Authenticate the client as a commissioner */
typedef struct _particle_ctrl_mesh_AuthRequest { 
    /* Commissioning credential */
    pb_callback_t password; 
} particle_ctrl_mesh_AuthRequest;

typedef struct _particle_ctrl_mesh_DiagnosticInfo_ChildTable { 
    pb_callback_t children; 
} particle_ctrl_mesh_DiagnosticInfo_ChildTable;

typedef struct _particle_ctrl_mesh_DiagnosticInfo_NetworkData_BorderRouter { 
    pb_callback_t entries; 
} particle_ctrl_mesh_DiagnosticInfo_NetworkData_BorderRouter;

typedef struct _particle_ctrl_mesh_DiagnosticInfo_NetworkData_Data { 
    pb_callback_t prefixes; 
    pb_callback_t services; 
} particle_ctrl_mesh_DiagnosticInfo_NetworkData_Data;

typedef struct _particle_ctrl_mesh_DiagnosticInfo_NetworkData_HasRoute { 
    pb_callback_t entries; 
} particle_ctrl_mesh_DiagnosticInfo_NetworkData_HasRoute;

typedef struct _particle_ctrl_mesh_GetNetworkDiagnosticsReply { 
    pb_callback_t nodes; 
} particle_ctrl_mesh_GetNetworkDiagnosticsReply;

/* Get the info about current network */
typedef struct _particle_ctrl_mesh_GetNetworkInfoRequest { 
    char dummy_field;
} particle_ctrl_mesh_GetNetworkInfoRequest;

/* Result codes:
 NOT_FOUND: No joinable network was found
 TIMEOUT: The join process timed out
 NOT_ALLOWED: Invalid security credentials */
typedef struct _particle_ctrl_mesh_JoinNetworkReply { 
    char dummy_field;
} particle_ctrl_mesh_JoinNetworkReply;

/* Result codes:
 NOT_FOUND: The device is not a member of a network
 NOT_ALLOWED: The client is not authenticated */
typedef struct _particle_ctrl_mesh_LeaveNetworkReply { 
    char dummy_field;
} particle_ctrl_mesh_LeaveNetworkReply;

/* Leave the network */
typedef struct _particle_ctrl_mesh_LeaveNetworkRequest { 
    char dummy_field;
} particle_ctrl_mesh_LeaveNetworkRequest;

/* Result codes:
 ALREADY_EXIST: The device is already a member of a network
 NOT_ALLOWED: The client is not authenticated */
typedef struct _particle_ctrl_mesh_PrepareJoinerReply { 
    /* EUI-64 */
    pb_callback_t eui64; 
    /* Newly generated joining device credential */
    pb_callback_t password; 
} particle_ctrl_mesh_PrepareJoinerReply;

/* Result codes:
 NOT_FOUND: The joiner was not found
 INVALID_STATE: The commissioner role is not started
 NOT_ALLOWED: The client is not authenticated */
typedef struct _particle_ctrl_mesh_RemoveJoinerReply { 
    char dummy_field;
} particle_ctrl_mesh_RemoveJoinerReply;

/* Remove the joiner device */
typedef struct _particle_ctrl_mesh_RemoveJoinerRequest { 
    /* EUI-64 of the joiner device */
    pb_callback_t eui64; 
} particle_ctrl_mesh_RemoveJoinerRequest;

typedef struct _particle_ctrl_mesh_ScanNetworksReply { 
    pb_callback_t networks; 
} particle_ctrl_mesh_ScanNetworksReply;

/* Result codes:
 NOT_ALLOWED: The client is not authenticated */
typedef struct _particle_ctrl_mesh_StartCommissionerReply { 
    char dummy_field;
} particle_ctrl_mesh_StartCommissionerReply;

/* Result codes:
 NOT_ALLOWED: The client is not authenticated */
typedef struct _particle_ctrl_mesh_StopCommissionerReply { 
    char dummy_field;
} particle_ctrl_mesh_StopCommissionerReply;

/* Stop the commissioner role */
typedef struct _particle_ctrl_mesh_StopCommissionerRequest { 
    char dummy_field;
} particle_ctrl_mesh_StopCommissionerRequest;

/* Add a joiner device */
typedef struct _particle_ctrl_mesh_AddJoinerRequest { 
    /* EUI-64 of the joiner device */
    pb_callback_t eui64; 
    /* Joining device credential */
    pb_callback_t password; 
    /* Time is seconds after which the joiner is automatically removed from the commissioner dataset */
    uint32_t timeout; 
} particle_ctrl_mesh_AddJoinerRequest;

/* Create a new network */
typedef struct _particle_ctrl_mesh_CreateNetworkRequest { 
    /* Network name */
    pb_callback_t name; 
    /* Commissioning credential for this network */
    pb_callback_t password; 
    /* Channel number */
    uint32_t channel; 
    /* Network ID */
    pb_callback_t network_id; 
} particle_ctrl_mesh_CreateNetworkRequest;

typedef struct _particle_ctrl_mesh_DiagnosticInfo_ChildTable_ChildEntry { 
    uint32_t timeout; 
    uint32_t child_id; 
    uint32_t mode; 
} particle_ctrl_mesh_DiagnosticInfo_ChildTable_ChildEntry;

typedef struct _particle_ctrl_mesh_DiagnosticInfo_Connectivity { 
    /* Bitmask of Flags */
    uint32_t parent_priority; 
    /* List of DiagnosticType to request */
    uint32_t link_quality_1; 
    /* Maximum time in seconds to wait for diagnostic replies */
    uint32_t link_quality_2; 
    uint32_t link_quality_3; 
    uint32_t leader_cost; 
    uint32_t id_sequence; 
    uint32_t active_routers; 
    uint32_t sed_buffer_size; 
    uint32_t sed_datagram_count; 
} particle_ctrl_mesh_DiagnosticInfo_Connectivity;

typedef struct _particle_ctrl_mesh_DiagnosticInfo_LeaderData { 
    uint32_t partition_id; 
    uint32_t weighting; 
    uint32_t data_version; 
    uint32_t stable_data_version; 
    uint32_t leader_rloc; 
} particle_ctrl_mesh_DiagnosticInfo_LeaderData;

typedef struct _particle_ctrl_mesh_DiagnosticInfo_MacCounters { 
    uint32_t if_in_unknown_protos; 
    uint32_t if_in_errors; 
    uint32_t if_out_errors; 
    uint32_t if_in_ucast_pkts; 
    uint32_t if_in_broadcast_pkts; 
    uint32_t if_in_discards; 
    uint32_t if_out_ucast_pkts; 
    uint32_t if_out_broadcast_pkts; 
    uint32_t if_out_discards; 
} particle_ctrl_mesh_DiagnosticInfo_MacCounters;

typedef struct _particle_ctrl_mesh_DiagnosticInfo_NetworkData { 
    bool has_stable;
    particle_ctrl_mesh_DiagnosticInfo_NetworkData_Data stable; 
    bool has_temporary;
    particle_ctrl_mesh_DiagnosticInfo_NetworkData_Data temporary; 
} particle_ctrl_mesh_DiagnosticInfo_NetworkData;

typedef struct _particle_ctrl_mesh_DiagnosticInfo_NetworkData_BorderRouter_BorderRouterEntry { 
    uint32_t rloc; 
    particle_ctrl_mesh_DiagnosticInfo_RoutePreference preference; 
    uint32_t flags; 
} particle_ctrl_mesh_DiagnosticInfo_NetworkData_BorderRouter_BorderRouterEntry;

typedef struct _particle_ctrl_mesh_DiagnosticInfo_NetworkData_Context { 
    uint32_t cid; 
    bool compress; 
    uint32_t context_length; 
} particle_ctrl_mesh_DiagnosticInfo_NetworkData_Context;

typedef struct _particle_ctrl_mesh_DiagnosticInfo_NetworkData_HasRoute_HasRouteEntry { 
    uint32_t rloc; 
    particle_ctrl_mesh_DiagnosticInfo_RoutePreference preference; 
} particle_ctrl_mesh_DiagnosticInfo_NetworkData_HasRoute_HasRouteEntry;

typedef PB_BYTES_ARRAY_T(16) particle_ctrl_mesh_DiagnosticInfo_NetworkData_Prefix_prefix_t;
typedef struct _particle_ctrl_mesh_DiagnosticInfo_NetworkData_Prefix { 
    uint32_t domain_id; 
    uint32_t prefix_length; 
    particle_ctrl_mesh_DiagnosticInfo_NetworkData_Prefix_prefix_t prefix; 
    pb_callback_t context; 
    bool has_has_route;
    particle_ctrl_mesh_DiagnosticInfo_NetworkData_HasRoute has_route; 
    bool has_border_router;
    particle_ctrl_mesh_DiagnosticInfo_NetworkData_BorderRouter border_router; 
} particle_ctrl_mesh_DiagnosticInfo_NetworkData_Prefix;

typedef struct _particle_ctrl_mesh_DiagnosticInfo_NetworkData_Server { 
    uint32_t rloc; 
    pb_callback_t data; 
} particle_ctrl_mesh_DiagnosticInfo_NetworkData_Server;

typedef struct _particle_ctrl_mesh_DiagnosticInfo_NetworkData_Service { 
    uint32_t sid; 
    uint32_t enterprise_number; 
    pb_callback_t data; 
    pb_callback_t servers; 
} particle_ctrl_mesh_DiagnosticInfo_NetworkData_Service;

typedef struct _particle_ctrl_mesh_DiagnosticInfo_Route64 { 
    uint32_t id_sequence; 
    pb_callback_t routes; 
} particle_ctrl_mesh_DiagnosticInfo_Route64;

typedef struct _particle_ctrl_mesh_DiagnosticInfo_Route64_RouteData { 
    uint32_t router_rloc; 
    uint32_t link_quality_out; 
    uint32_t link_quality_in; 
    uint32_t route_cost; 
} particle_ctrl_mesh_DiagnosticInfo_Route64_RouteData;

typedef struct _particle_ctrl_mesh_GetNetworkDiagnosticsRequest { 
    uint32_t flags; 
    pb_callback_t diagnostic_types; 
    uint32_t timeout; 
} particle_ctrl_mesh_GetNetworkDiagnosticsRequest;

/* Join the network */
typedef struct _particle_ctrl_mesh_JoinNetworkRequest { 
    /* Time in seconds after which the attempt to join is cancelled */
    uint32_t timeout; 
} particle_ctrl_mesh_JoinNetworkRequest;

/* Network info */
typedef struct _particle_ctrl_mesh_NetworkInfo { 
    /* Network name */
    pb_callback_t name; 
    /* Extended PAN ID */
    pb_callback_t ext_pan_id; 
    /* PAN ID */
    uint32_t pan_id; 
    /* Channel number */
    uint32_t channel; 
    /* network ID */
    pb_callback_t network_id; 
} particle_ctrl_mesh_NetworkInfo;

/* Scan networks */
typedef struct _particle_ctrl_mesh_ScanNetworksRequest { 
    /* Time in milliseconds to spend scanning each channel. A value of 0 sets the default OpenThread
 timeout (300 ms) */
    uint32_t duration; 
} particle_ctrl_mesh_ScanNetworksRequest;

/* Start the commissioner role */
typedef struct _particle_ctrl_mesh_StartCommissionerRequest { 
    /* Time is seconds after which the role is automatically stopped */
    uint32_t timeout; 
} particle_ctrl_mesh_StartCommissionerRequest;

/* Result codes:
 ALREADY_EXIST: The device is already a member of a network
 NOT_ALLOWED: The client is not authenticated */
typedef struct _particle_ctrl_mesh_CreateNetworkReply { 
    /* Network info */
    bool has_network;
    particle_ctrl_mesh_NetworkInfo network; 
} particle_ctrl_mesh_CreateNetworkReply;

typedef PB_BYTES_ARRAY_T(8) particle_ctrl_mesh_DiagnosticInfo_ext_mac_address_t;
typedef PB_BYTES_ARRAY_T(3) particle_ctrl_mesh_DiagnosticInfo_channel_pages_t;
typedef PB_BYTES_ARRAY_T(12) particle_ctrl_mesh_DiagnosticInfo_device_id_t;
/* Mapping of Diagnostic TLVs */
typedef struct _particle_ctrl_mesh_DiagnosticInfo { 
    /* MAC Extended Address (64-bit): MAC Extended Address TLV */
    particle_ctrl_mesh_DiagnosticInfo_ext_mac_address_t ext_mac_address; 
    /* MAC Address (16-bit): Address16 TLV (RLOC) */
    uint32_t rloc; 
    /* Mode (Capability Information): Mode TLV */
    uint32_t mode; 
    /* Timeout: Timeout TLV */
    uint32_t timeout; 
    /* Connectivity : Connectivity TLV */
    bool has_connectivity;
    particle_ctrl_mesh_DiagnosticInfo_Connectivity connectivity; 
    /* Route64: Route64 TLV */
    bool has_route64;
    particle_ctrl_mesh_DiagnosticInfo_Route64 route64; 
    /* Leader Data: Leader Data TLV */
    bool has_leader_data;
    particle_ctrl_mesh_DiagnosticInfo_LeaderData leader_data; 
    /* Network Data: Network Data TLV */
    bool has_network_data;
    particle_ctrl_mesh_DiagnosticInfo_NetworkData network_data; 
    /* IPv6 address list: IPv6 Address List TLV */
    pb_callback_t ipv6_address_list; 
    /* MAC Counters: MAC Counters TLV */
    bool has_mac_counters;
    particle_ctrl_mesh_DiagnosticInfo_MacCounters mac_counters; 
    /* Battery Level: Battery Level TLV */
    uint32_t battery_level; 
    /* Supply Voltage: Supply Voltage TLV */
    uint32_t supply_voltage; 
    /* Child Table: Child Table TLV */
    bool has_child_table;
    particle_ctrl_mesh_DiagnosticInfo_ChildTable child_table; 
    /* Channel Pages: Channel Pages TLV */
    particle_ctrl_mesh_DiagnosticInfo_channel_pages_t channel_pages; 
    /* Type List: Type List TLV
 List of DiagnosticType */
    pb_callback_t type_list; 
    /* Max Child Timeout: Timeout TLV */
    uint32_t max_child_timeout; 
    /* Particle-specific Device Id */
    particle_ctrl_mesh_DiagnosticInfo_device_id_t device_id; 
} particle_ctrl_mesh_DiagnosticInfo;

/* Result codes:
 NOT_FOUND: The device is not a member of a network */
typedef struct _particle_ctrl_mesh_GetNetworkInfoReply { 
    /* Network info */
    bool has_network;
    particle_ctrl_mesh_NetworkInfo network; 
} particle_ctrl_mesh_GetNetworkInfoReply;

/* Prepare the device to join a network */
typedef struct _particle_ctrl_mesh_PrepareJoinerRequest { 
    bool has_network;
    particle_ctrl_mesh_NetworkInfo network; 
} particle_ctrl_mesh_PrepareJoinerRequest;


/* Helper constants for enums */
#define _particle_ctrl_mesh_DiagnosticType_MIN particle_ctrl_mesh_DiagnosticType_MAC_EXTENDED_ADDRESS
#define _particle_ctrl_mesh_DiagnosticType_MAX particle_ctrl_mesh_DiagnosticType_MAX_CHILD_TIMEOUT
#define _particle_ctrl_mesh_DiagnosticType_ARRAYSIZE ((particle_ctrl_mesh_DiagnosticType)(particle_ctrl_mesh_DiagnosticType_MAX_CHILD_TIMEOUT+1))

#define _particle_ctrl_mesh_DiagnosticInfo_Mode_MIN particle_ctrl_mesh_DiagnosticInfo_Mode_INVALID
#define _particle_ctrl_mesh_DiagnosticInfo_Mode_MAX particle_ctrl_mesh_DiagnosticInfo_Mode_NETWORK_DATA_FULL
#define _particle_ctrl_mesh_DiagnosticInfo_Mode_ARRAYSIZE ((particle_ctrl_mesh_DiagnosticInfo_Mode)(particle_ctrl_mesh_DiagnosticInfo_Mode_NETWORK_DATA_FULL+1))

#define _particle_ctrl_mesh_DiagnosticInfo_RoutePreference_MIN particle_ctrl_mesh_DiagnosticInfo_RoutePreference_LOW
#define _particle_ctrl_mesh_DiagnosticInfo_RoutePreference_MAX particle_ctrl_mesh_DiagnosticInfo_RoutePreference_HIGH
#define _particle_ctrl_mesh_DiagnosticInfo_RoutePreference_ARRAYSIZE ((particle_ctrl_mesh_DiagnosticInfo_RoutePreference)(particle_ctrl_mesh_DiagnosticInfo_RoutePreference_HIGH+1))

#define _particle_ctrl_mesh_DiagnosticInfo_NetworkData_BorderRouter_BorderRouterEntry_Flags_MIN particle_ctrl_mesh_DiagnosticInfo_NetworkData_BorderRouter_BorderRouterEntry_Flags_NONE
#define _particle_ctrl_mesh_DiagnosticInfo_NetworkData_BorderRouter_BorderRouterEntry_Flags_MAX particle_ctrl_mesh_DiagnosticInfo_NetworkData_BorderRouter_BorderRouterEntry_Flags_ND_DNS
#define _particle_ctrl_mesh_DiagnosticInfo_NetworkData_BorderRouter_BorderRouterEntry_Flags_ARRAYSIZE ((particle_ctrl_mesh_DiagnosticInfo_NetworkData_BorderRouter_BorderRouterEntry_Flags)(particle_ctrl_mesh_DiagnosticInfo_NetworkData_BorderRouter_BorderRouterEntry_Flags_ND_DNS+1))

#define _particle_ctrl_mesh_GetNetworkDiagnosticsRequest_Flags_MIN particle_ctrl_mesh_GetNetworkDiagnosticsRequest_Flags_INVALID
#define _particle_ctrl_mesh_GetNetworkDiagnosticsRequest_Flags_MAX particle_ctrl_mesh_GetNetworkDiagnosticsRequest_Flags_RESOLVE_DEVICE_ID
#define _particle_ctrl_mesh_GetNetworkDiagnosticsRequest_Flags_ARRAYSIZE ((particle_ctrl_mesh_GetNetworkDiagnosticsRequest_Flags)(particle_ctrl_mesh_GetNetworkDiagnosticsRequest_Flags_RESOLVE_DEVICE_ID+1))


#ifdef __cplusplus
extern "C" {
#endif

/* Initializer values for message structs */
#define particle_ctrl_mesh_NetworkInfo_init_default {{{NULL}, NULL}, {{NULL}, NULL}, 0, 0, {{NULL}, NULL}}
#define particle_ctrl_mesh_AuthRequest_init_default {{{NULL}, NULL}}
#define particle_ctrl_mesh_AuthReply_init_default {0}
#define particle_ctrl_mesh_CreateNetworkRequest_init_default {{{NULL}, NULL}, {{NULL}, NULL}, 0, {{NULL}, NULL}}
#define particle_ctrl_mesh_CreateNetworkReply_init_default {false, particle_ctrl_mesh_NetworkInfo_init_default}
#define particle_ctrl_mesh_StartCommissionerRequest_init_default {0}
#define particle_ctrl_mesh_StartCommissionerReply_init_default {0}
#define particle_ctrl_mesh_StopCommissionerRequest_init_default {0}
#define particle_ctrl_mesh_StopCommissionerReply_init_default {0}
#define particle_ctrl_mesh_PrepareJoinerRequest_init_default {false, particle_ctrl_mesh_NetworkInfo_init_default}
#define particle_ctrl_mesh_PrepareJoinerReply_init_default {{{NULL}, NULL}, {{NULL}, NULL}}
#define particle_ctrl_mesh_AddJoinerRequest_init_default {{{NULL}, NULL}, {{NULL}, NULL}, 0}
#define particle_ctrl_mesh_AddJoinerReply_init_default {0}
#define particle_ctrl_mesh_RemoveJoinerRequest_init_default {{{NULL}, NULL}}
#define particle_ctrl_mesh_RemoveJoinerReply_init_default {0}
#define particle_ctrl_mesh_JoinNetworkRequest_init_default {0}
#define particle_ctrl_mesh_JoinNetworkReply_init_default {0}
#define particle_ctrl_mesh_LeaveNetworkRequest_init_default {0}
#define particle_ctrl_mesh_LeaveNetworkReply_init_default {0}
#define particle_ctrl_mesh_GetNetworkInfoRequest_init_default {0}
#define particle_ctrl_mesh_GetNetworkInfoReply_init_default {false, particle_ctrl_mesh_NetworkInfo_init_default}
#define particle_ctrl_mesh_ScanNetworksRequest_init_default {0}
#define particle_ctrl_mesh_ScanNetworksReply_init_default {{{NULL}, NULL}}
#define particle_ctrl_mesh_DiagnosticInfo_init_default {{0, {0}}, 0, 0, 0, false, particle_ctrl_mesh_DiagnosticInfo_Connectivity_init_default, false, particle_ctrl_mesh_DiagnosticInfo_Route64_init_default, false, particle_ctrl_mesh_DiagnosticInfo_LeaderData_init_default, false, particle_ctrl_mesh_DiagnosticInfo_NetworkData_init_default, {{NULL}, NULL}, false, particle_ctrl_mesh_DiagnosticInfo_MacCounters_init_default, 0, 0, false, particle_ctrl_mesh_DiagnosticInfo_ChildTable_init_default, {0, {0}}, {{NULL}, NULL}, 0, {0, {0}}}
#define particle_ctrl_mesh_DiagnosticInfo_Connectivity_init_default {0, 0, 0, 0, 0, 0, 0, 0, 0}
#define particle_ctrl_mesh_DiagnosticInfo_Route64_init_default {0, {{NULL}, NULL}}
#define particle_ctrl_mesh_DiagnosticInfo_Route64_RouteData_init_default {0, 0, 0, 0}
#define particle_ctrl_mesh_DiagnosticInfo_LeaderData_init_default {0, 0, 0, 0, 0}
#define particle_ctrl_mesh_DiagnosticInfo_NetworkData_init_default {false, particle_ctrl_mesh_DiagnosticInfo_NetworkData_Data_init_default, false, particle_ctrl_mesh_DiagnosticInfo_NetworkData_Data_init_default}
#define particle_ctrl_mesh_DiagnosticInfo_NetworkData_HasRoute_init_default {{{NULL}, NULL}}
#define particle_ctrl_mesh_DiagnosticInfo_NetworkData_HasRoute_HasRouteEntry_init_default {0, _particle_ctrl_mesh_DiagnosticInfo_RoutePreference_MIN}
#define particle_ctrl_mesh_DiagnosticInfo_NetworkData_BorderRouter_init_default {{{NULL}, NULL}}
#define particle_ctrl_mesh_DiagnosticInfo_NetworkData_BorderRouter_BorderRouterEntry_init_default {0, _particle_ctrl_mesh_DiagnosticInfo_RoutePreference_MIN, 0}
#define particle_ctrl_mesh_DiagnosticInfo_NetworkData_Context_init_default {0, 0, 0}
#define particle_ctrl_mesh_DiagnosticInfo_NetworkData_Prefix_init_default {0, 0, {0, {0}}, {{NULL}, NULL}, false, particle_ctrl_mesh_DiagnosticInfo_NetworkData_HasRoute_init_default, false, particle_ctrl_mesh_DiagnosticInfo_NetworkData_BorderRouter_init_default}
#define particle_ctrl_mesh_DiagnosticInfo_NetworkData_Server_init_default {0, {{NULL}, NULL}}
#define particle_ctrl_mesh_DiagnosticInfo_NetworkData_Service_init_default {0, 0, {{NULL}, NULL}, {{NULL}, NULL}}
#define particle_ctrl_mesh_DiagnosticInfo_NetworkData_Data_init_default {{{NULL}, NULL}, {{NULL}, NULL}}
#define particle_ctrl_mesh_DiagnosticInfo_MacCounters_init_default {0, 0, 0, 0, 0, 0, 0, 0, 0}
#define particle_ctrl_mesh_DiagnosticInfo_ChildTable_init_default {{{NULL}, NULL}}
#define particle_ctrl_mesh_DiagnosticInfo_ChildTable_ChildEntry_init_default {0, 0, 0}
#define particle_ctrl_mesh_GetNetworkDiagnosticsRequest_init_default {0, {{NULL}, NULL}, 0}
#define particle_ctrl_mesh_GetNetworkDiagnosticsReply_init_default {{{NULL}, NULL}}
#define particle_ctrl_mesh_NetworkInfo_init_zero {{{NULL}, NULL}, {{NULL}, NULL}, 0, 0, {{NULL}, NULL}}
#define particle_ctrl_mesh_AuthRequest_init_zero {{{NULL}, NULL}}
#define particle_ctrl_mesh_AuthReply_init_zero   {0}
#define particle_ctrl_mesh_CreateNetworkRequest_init_zero {{{NULL}, NULL}, {{NULL}, NULL}, 0, {{NULL}, NULL}}
#define particle_ctrl_mesh_CreateNetworkReply_init_zero {false, particle_ctrl_mesh_NetworkInfo_init_zero}
#define particle_ctrl_mesh_StartCommissionerRequest_init_zero {0}
#define particle_ctrl_mesh_StartCommissionerReply_init_zero {0}
#define particle_ctrl_mesh_StopCommissionerRequest_init_zero {0}
#define particle_ctrl_mesh_StopCommissionerReply_init_zero {0}
#define particle_ctrl_mesh_PrepareJoinerRequest_init_zero {false, particle_ctrl_mesh_NetworkInfo_init_zero}
#define particle_ctrl_mesh_PrepareJoinerReply_init_zero {{{NULL}, NULL}, {{NULL}, NULL}}
#define particle_ctrl_mesh_AddJoinerRequest_init_zero {{{NULL}, NULL}, {{NULL}, NULL}, 0}
#define particle_ctrl_mesh_AddJoinerReply_init_zero {0}
#define particle_ctrl_mesh_RemoveJoinerRequest_init_zero {{{NULL}, NULL}}
#define particle_ctrl_mesh_RemoveJoinerReply_init_zero {0}
#define particle_ctrl_mesh_JoinNetworkRequest_init_zero {0}
#define particle_ctrl_mesh_JoinNetworkReply_init_zero {0}
#define particle_ctrl_mesh_LeaveNetworkRequest_init_zero {0}
#define particle_ctrl_mesh_LeaveNetworkReply_init_zero {0}
#define particle_ctrl_mesh_GetNetworkInfoRequest_init_zero {0}
#define particle_ctrl_mesh_GetNetworkInfoReply_init_zero {false, particle_ctrl_mesh_NetworkInfo_init_zero}
#define particle_ctrl_mesh_ScanNetworksRequest_init_zero {0}
#define particle_ctrl_mesh_ScanNetworksReply_init_zero {{{NULL}, NULL}}
#define particle_ctrl_mesh_DiagnosticInfo_init_zero {{0, {0}}, 0, 0, 0, false, particle_ctrl_mesh_DiagnosticInfo_Connectivity_init_zero, false, particle_ctrl_mesh_DiagnosticInfo_Route64_init_zero, false, particle_ctrl_mesh_DiagnosticInfo_LeaderData_init_zero, false, particle_ctrl_mesh_DiagnosticInfo_NetworkData_init_zero, {{NULL}, NULL}, false, particle_ctrl_mesh_DiagnosticInfo_MacCounters_init_zero, 0, 0, false, particle_ctrl_mesh_DiagnosticInfo_ChildTable_init_zero, {0, {0}}, {{NULL}, NULL}, 0, {0, {0}}}
#define particle_ctrl_mesh_DiagnosticInfo_Connectivity_init_zero {0, 0, 0, 0, 0, 0, 0, 0, 0}
#define particle_ctrl_mesh_DiagnosticInfo_Route64_init_zero {0, {{NULL}, NULL}}
#define particle_ctrl_mesh_DiagnosticInfo_Route64_RouteData_init_zero {0, 0, 0, 0}
#define particle_ctrl_mesh_DiagnosticInfo_LeaderData_init_zero {0, 0, 0, 0, 0}
#define particle_ctrl_mesh_DiagnosticInfo_NetworkData_init_zero {false, particle_ctrl_mesh_DiagnosticInfo_NetworkData_Data_init_zero, false, particle_ctrl_mesh_DiagnosticInfo_NetworkData_Data_init_zero}
#define particle_ctrl_mesh_DiagnosticInfo_NetworkData_HasRoute_init_zero {{{NULL}, NULL}}
#define particle_ctrl_mesh_DiagnosticInfo_NetworkData_HasRoute_HasRouteEntry_init_zero {0, _particle_ctrl_mesh_DiagnosticInfo_RoutePreference_MIN}
#define particle_ctrl_mesh_DiagnosticInfo_NetworkData_BorderRouter_init_zero {{{NULL}, NULL}}
#define particle_ctrl_mesh_DiagnosticInfo_NetworkData_BorderRouter_BorderRouterEntry_init_zero {0, _particle_ctrl_mesh_DiagnosticInfo_RoutePreference_MIN, 0}
#define particle_ctrl_mesh_DiagnosticInfo_NetworkData_Context_init_zero {0, 0, 0}
#define particle_ctrl_mesh_DiagnosticInfo_NetworkData_Prefix_init_zero {0, 0, {0, {0}}, {{NULL}, NULL}, false, particle_ctrl_mesh_DiagnosticInfo_NetworkData_HasRoute_init_zero, false, particle_ctrl_mesh_DiagnosticInfo_NetworkData_BorderRouter_init_zero}
#define particle_ctrl_mesh_DiagnosticInfo_NetworkData_Server_init_zero {0, {{NULL}, NULL}}
#define particle_ctrl_mesh_DiagnosticInfo_NetworkData_Service_init_zero {0, 0, {{NULL}, NULL}, {{NULL}, NULL}}
#define particle_ctrl_mesh_DiagnosticInfo_NetworkData_Data_init_zero {{{NULL}, NULL}, {{NULL}, NULL}}
#define particle_ctrl_mesh_DiagnosticInfo_MacCounters_init_zero {0, 0, 0, 0, 0, 0, 0, 0, 0}
#define particle_ctrl_mesh_DiagnosticInfo_ChildTable_init_zero {{{NULL}, NULL}}
#define particle_ctrl_mesh_DiagnosticInfo_ChildTable_ChildEntry_init_zero {0, 0, 0}
#define particle_ctrl_mesh_GetNetworkDiagnosticsRequest_init_zero {0, {{NULL}, NULL}, 0}
#define particle_ctrl_mesh_GetNetworkDiagnosticsReply_init_zero {{{NULL}, NULL}}

/* Field tags (for use in manual encoding/decoding) */
#define particle_ctrl_mesh_AuthRequest_password_tag 1
#define particle_ctrl_mesh_DiagnosticInfo_ChildTable_children_tag 1
#define particle_ctrl_mesh_DiagnosticInfo_NetworkData_BorderRouter_entries_tag 1
#define particle_ctrl_mesh_DiagnosticInfo_NetworkData_Data_prefixes_tag 1
#define particle_ctrl_mesh_DiagnosticInfo_NetworkData_Data_services_tag 2
#define particle_ctrl_mesh_DiagnosticInfo_NetworkData_HasRoute_entries_tag 1
#define particle_ctrl_mesh_GetNetworkDiagnosticsReply_nodes_tag 1
#define particle_ctrl_mesh_PrepareJoinerReply_eui64_tag 1
#define particle_ctrl_mesh_PrepareJoinerReply_password_tag 2
#define particle_ctrl_mesh_RemoveJoinerRequest_eui64_tag 1
#define particle_ctrl_mesh_ScanNetworksReply_networks_tag 1
#define particle_ctrl_mesh_AddJoinerRequest_eui64_tag 1
#define particle_ctrl_mesh_AddJoinerRequest_password_tag 2
#define particle_ctrl_mesh_AddJoinerRequest_timeout_tag 3
#define particle_ctrl_mesh_CreateNetworkRequest_name_tag 1
#define particle_ctrl_mesh_CreateNetworkRequest_password_tag 2
#define particle_ctrl_mesh_CreateNetworkRequest_channel_tag 3
#define particle_ctrl_mesh_CreateNetworkRequest_network_id_tag 4
#define particle_ctrl_mesh_DiagnosticInfo_ChildTable_ChildEntry_timeout_tag 1
#define particle_ctrl_mesh_DiagnosticInfo_ChildTable_ChildEntry_child_id_tag 2
#define particle_ctrl_mesh_DiagnosticInfo_ChildTable_ChildEntry_mode_tag 3
#define particle_ctrl_mesh_DiagnosticInfo_Connectivity_parent_priority_tag 1
#define particle_ctrl_mesh_DiagnosticInfo_Connectivity_link_quality_1_tag 2
#define particle_ctrl_mesh_DiagnosticInfo_Connectivity_link_quality_2_tag 3
#define particle_ctrl_mesh_DiagnosticInfo_Connectivity_link_quality_3_tag 4
#define particle_ctrl_mesh_DiagnosticInfo_Connectivity_leader_cost_tag 5
#define particle_ctrl_mesh_DiagnosticInfo_Connectivity_id_sequence_tag 6
#define particle_ctrl_mesh_DiagnosticInfo_Connectivity_active_routers_tag 7
#define particle_ctrl_mesh_DiagnosticInfo_Connectivity_sed_buffer_size_tag 8
#define particle_ctrl_mesh_DiagnosticInfo_Connectivity_sed_datagram_count_tag 9
#define particle_ctrl_mesh_DiagnosticInfo_LeaderData_partition_id_tag 1
#define particle_ctrl_mesh_DiagnosticInfo_LeaderData_weighting_tag 2
#define particle_ctrl_mesh_DiagnosticInfo_LeaderData_data_version_tag 3
#define particle_ctrl_mesh_DiagnosticInfo_LeaderData_stable_data_version_tag 4
#define particle_ctrl_mesh_DiagnosticInfo_LeaderData_leader_rloc_tag 5
#define particle_ctrl_mesh_DiagnosticInfo_MacCounters_if_in_unknown_protos_tag 1
#define particle_ctrl_mesh_DiagnosticInfo_MacCounters_if_in_errors_tag 2
#define particle_ctrl_mesh_DiagnosticInfo_MacCounters_if_out_errors_tag 3
#define particle_ctrl_mesh_DiagnosticInfo_MacCounters_if_in_ucast_pkts_tag 4
#define particle_ctrl_mesh_DiagnosticInfo_MacCounters_if_in_broadcast_pkts_tag 5
#define particle_ctrl_mesh_DiagnosticInfo_MacCounters_if_in_discards_tag 6
#define particle_ctrl_mesh_DiagnosticInfo_MacCounters_if_out_ucast_pkts_tag 7
#define particle_ctrl_mesh_DiagnosticInfo_MacCounters_if_out_broadcast_pkts_tag 8
#define particle_ctrl_mesh_DiagnosticInfo_MacCounters_if_out_discards_tag 9
#define particle_ctrl_mesh_DiagnosticInfo_NetworkData_stable_tag 1
#define particle_ctrl_mesh_DiagnosticInfo_NetworkData_temporary_tag 2
#define particle_ctrl_mesh_DiagnosticInfo_NetworkData_BorderRouter_BorderRouterEntry_rloc_tag 1
#define particle_ctrl_mesh_DiagnosticInfo_NetworkData_BorderRouter_BorderRouterEntry_preference_tag 2
#define particle_ctrl_mesh_DiagnosticInfo_NetworkData_BorderRouter_BorderRouterEntry_flags_tag 3
#define particle_ctrl_mesh_DiagnosticInfo_NetworkData_Context_cid_tag 1
#define particle_ctrl_mesh_DiagnosticInfo_NetworkData_Context_compress_tag 2
#define particle_ctrl_mesh_DiagnosticInfo_NetworkData_Context_context_length_tag 3
#define particle_ctrl_mesh_DiagnosticInfo_NetworkData_HasRoute_HasRouteEntry_rloc_tag 1
#define particle_ctrl_mesh_DiagnosticInfo_NetworkData_HasRoute_HasRouteEntry_preference_tag 2
#define particle_ctrl_mesh_DiagnosticInfo_NetworkData_Prefix_domain_id_tag 1
#define particle_ctrl_mesh_DiagnosticInfo_NetworkData_Prefix_prefix_length_tag 2
#define particle_ctrl_mesh_DiagnosticInfo_NetworkData_Prefix_prefix_tag 3
#define particle_ctrl_mesh_DiagnosticInfo_NetworkData_Prefix_context_tag 4
#define particle_ctrl_mesh_DiagnosticInfo_NetworkData_Prefix_has_route_tag 5
#define particle_ctrl_mesh_DiagnosticInfo_NetworkData_Prefix_border_router_tag 6
#define particle_ctrl_mesh_DiagnosticInfo_NetworkData_Server_rloc_tag 1
#define particle_ctrl_mesh_DiagnosticInfo_NetworkData_Server_data_tag 2
#define particle_ctrl_mesh_DiagnosticInfo_NetworkData_Service_sid_tag 1
#define particle_ctrl_mesh_DiagnosticInfo_NetworkData_Service_enterprise_number_tag 2
#define particle_ctrl_mesh_DiagnosticInfo_NetworkData_Service_data_tag 3
#define particle_ctrl_mesh_DiagnosticInfo_NetworkData_Service_servers_tag 4
#define particle_ctrl_mesh_DiagnosticInfo_Route64_id_sequence_tag 1
#define particle_ctrl_mesh_DiagnosticInfo_Route64_routes_tag 2
#define particle_ctrl_mesh_DiagnosticInfo_Route64_RouteData_router_rloc_tag 1
#define particle_ctrl_mesh_DiagnosticInfo_Route64_RouteData_link_quality_out_tag 2
#define particle_ctrl_mesh_DiagnosticInfo_Route64_RouteData_link_quality_in_tag 3
#define particle_ctrl_mesh_DiagnosticInfo_Route64_RouteData_route_cost_tag 4
#define particle_ctrl_mesh_GetNetworkDiagnosticsRequest_flags_tag 1
#define particle_ctrl_mesh_GetNetworkDiagnosticsRequest_diagnostic_types_tag 2
#define particle_ctrl_mesh_GetNetworkDiagnosticsRequest_timeout_tag 3
#define particle_ctrl_mesh_JoinNetworkRequest_timeout_tag 1
#define particle_ctrl_mesh_NetworkInfo_name_tag  1
#define particle_ctrl_mesh_NetworkInfo_ext_pan_id_tag 2
#define particle_ctrl_mesh_NetworkInfo_pan_id_tag 3
#define particle_ctrl_mesh_NetworkInfo_channel_tag 4
#define particle_ctrl_mesh_NetworkInfo_network_id_tag 5
#define particle_ctrl_mesh_ScanNetworksRequest_duration_tag 1
#define particle_ctrl_mesh_StartCommissionerRequest_timeout_tag 1
#define particle_ctrl_mesh_CreateNetworkReply_network_tag 1
#define particle_ctrl_mesh_DiagnosticInfo_ext_mac_address_tag 1
#define particle_ctrl_mesh_DiagnosticInfo_rloc_tag 2
#define particle_ctrl_mesh_DiagnosticInfo_mode_tag 3
#define particle_ctrl_mesh_DiagnosticInfo_timeout_tag 4
#define particle_ctrl_mesh_DiagnosticInfo_connectivity_tag 5
#define particle_ctrl_mesh_DiagnosticInfo_route64_tag 6
#define particle_ctrl_mesh_DiagnosticInfo_leader_data_tag 7
#define particle_ctrl_mesh_DiagnosticInfo_network_data_tag 8
#define particle_ctrl_mesh_DiagnosticInfo_ipv6_address_list_tag 9
#define particle_ctrl_mesh_DiagnosticInfo_mac_counters_tag 10
#define particle_ctrl_mesh_DiagnosticInfo_battery_level_tag 15
#define particle_ctrl_mesh_DiagnosticInfo_supply_voltage_tag 16
#define particle_ctrl_mesh_DiagnosticInfo_child_table_tag 17
#define particle_ctrl_mesh_DiagnosticInfo_channel_pages_tag 18
#define particle_ctrl_mesh_DiagnosticInfo_type_list_tag 19
#define particle_ctrl_mesh_DiagnosticInfo_max_child_timeout_tag 20
#define particle_ctrl_mesh_DiagnosticInfo_device_id_tag 100
#define particle_ctrl_mesh_GetNetworkInfoReply_network_tag 1
#define particle_ctrl_mesh_PrepareJoinerRequest_network_tag 1

/* Struct field encoding specification for nanopb */
#define particle_ctrl_mesh_NetworkInfo_FIELDLIST(X, a) \
X(a, CALLBACK, SINGULAR, STRING,   name,              1) \
X(a, CALLBACK, SINGULAR, STRING,   ext_pan_id,        2) \
X(a, STATIC,   SINGULAR, UINT32,   pan_id,            3) \
X(a, STATIC,   SINGULAR, UINT32,   channel,           4) \
X(a, CALLBACK, SINGULAR, STRING,   network_id,        5)
#define particle_ctrl_mesh_NetworkInfo_CALLBACK pb_default_field_callback
#define particle_ctrl_mesh_NetworkInfo_DEFAULT NULL

#define particle_ctrl_mesh_AuthRequest_FIELDLIST(X, a) \
X(a, CALLBACK, SINGULAR, STRING,   password,          1)
#define particle_ctrl_mesh_AuthRequest_CALLBACK pb_default_field_callback
#define particle_ctrl_mesh_AuthRequest_DEFAULT NULL

#define particle_ctrl_mesh_AuthReply_FIELDLIST(X, a) \

#define particle_ctrl_mesh_AuthReply_CALLBACK NULL
#define particle_ctrl_mesh_AuthReply_DEFAULT NULL

#define particle_ctrl_mesh_CreateNetworkRequest_FIELDLIST(X, a) \
X(a, CALLBACK, SINGULAR, STRING,   name,              1) \
X(a, CALLBACK, SINGULAR, STRING,   password,          2) \
X(a, STATIC,   SINGULAR, UINT32,   channel,           3) \
X(a, CALLBACK, SINGULAR, STRING,   network_id,        4)
#define particle_ctrl_mesh_CreateNetworkRequest_CALLBACK pb_default_field_callback
#define particle_ctrl_mesh_CreateNetworkRequest_DEFAULT NULL

#define particle_ctrl_mesh_CreateNetworkReply_FIELDLIST(X, a) \
X(a, STATIC,   OPTIONAL, MESSAGE,  network,           1)
#define particle_ctrl_mesh_CreateNetworkReply_CALLBACK NULL
#define particle_ctrl_mesh_CreateNetworkReply_DEFAULT NULL
#define particle_ctrl_mesh_CreateNetworkReply_network_MSGTYPE particle_ctrl_mesh_NetworkInfo

#define particle_ctrl_mesh_StartCommissionerRequest_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, UINT32,   timeout,           1)
#define particle_ctrl_mesh_StartCommissionerRequest_CALLBACK NULL
#define particle_ctrl_mesh_StartCommissionerRequest_DEFAULT NULL

#define particle_ctrl_mesh_StartCommissionerReply_FIELDLIST(X, a) \

#define particle_ctrl_mesh_StartCommissionerReply_CALLBACK NULL
#define particle_ctrl_mesh_StartCommissionerReply_DEFAULT NULL

#define particle_ctrl_mesh_StopCommissionerRequest_FIELDLIST(X, a) \

#define particle_ctrl_mesh_StopCommissionerRequest_CALLBACK NULL
#define particle_ctrl_mesh_StopCommissionerRequest_DEFAULT NULL

#define particle_ctrl_mesh_StopCommissionerReply_FIELDLIST(X, a) \

#define particle_ctrl_mesh_StopCommissionerReply_CALLBACK NULL
#define particle_ctrl_mesh_StopCommissionerReply_DEFAULT NULL

#define particle_ctrl_mesh_PrepareJoinerRequest_FIELDLIST(X, a) \
X(a, STATIC,   OPTIONAL, MESSAGE,  network,           1)
#define particle_ctrl_mesh_PrepareJoinerRequest_CALLBACK NULL
#define particle_ctrl_mesh_PrepareJoinerRequest_DEFAULT NULL
#define particle_ctrl_mesh_PrepareJoinerRequest_network_MSGTYPE particle_ctrl_mesh_NetworkInfo

#define particle_ctrl_mesh_PrepareJoinerReply_FIELDLIST(X, a) \
X(a, CALLBACK, SINGULAR, STRING,   eui64,             1) \
X(a, CALLBACK, SINGULAR, STRING,   password,          2)
#define particle_ctrl_mesh_PrepareJoinerReply_CALLBACK pb_default_field_callback
#define particle_ctrl_mesh_PrepareJoinerReply_DEFAULT NULL

#define particle_ctrl_mesh_AddJoinerRequest_FIELDLIST(X, a) \
X(a, CALLBACK, SINGULAR, STRING,   eui64,             1) \
X(a, CALLBACK, SINGULAR, STRING,   password,          2) \
X(a, STATIC,   SINGULAR, UINT32,   timeout,           3)
#define particle_ctrl_mesh_AddJoinerRequest_CALLBACK pb_default_field_callback
#define particle_ctrl_mesh_AddJoinerRequest_DEFAULT NULL

#define particle_ctrl_mesh_AddJoinerReply_FIELDLIST(X, a) \

#define particle_ctrl_mesh_AddJoinerReply_CALLBACK NULL
#define particle_ctrl_mesh_AddJoinerReply_DEFAULT NULL

#define particle_ctrl_mesh_RemoveJoinerRequest_FIELDLIST(X, a) \
X(a, CALLBACK, SINGULAR, STRING,   eui64,             1)
#define particle_ctrl_mesh_RemoveJoinerRequest_CALLBACK pb_default_field_callback
#define particle_ctrl_mesh_RemoveJoinerRequest_DEFAULT NULL

#define particle_ctrl_mesh_RemoveJoinerReply_FIELDLIST(X, a) \

#define particle_ctrl_mesh_RemoveJoinerReply_CALLBACK NULL
#define particle_ctrl_mesh_RemoveJoinerReply_DEFAULT NULL

#define particle_ctrl_mesh_JoinNetworkRequest_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, UINT32,   timeout,           1)
#define particle_ctrl_mesh_JoinNetworkRequest_CALLBACK NULL
#define particle_ctrl_mesh_JoinNetworkRequest_DEFAULT NULL

#define particle_ctrl_mesh_JoinNetworkReply_FIELDLIST(X, a) \

#define particle_ctrl_mesh_JoinNetworkReply_CALLBACK NULL
#define particle_ctrl_mesh_JoinNetworkReply_DEFAULT NULL

#define particle_ctrl_mesh_LeaveNetworkRequest_FIELDLIST(X, a) \

#define particle_ctrl_mesh_LeaveNetworkRequest_CALLBACK NULL
#define particle_ctrl_mesh_LeaveNetworkRequest_DEFAULT NULL

#define particle_ctrl_mesh_LeaveNetworkReply_FIELDLIST(X, a) \

#define particle_ctrl_mesh_LeaveNetworkReply_CALLBACK NULL
#define particle_ctrl_mesh_LeaveNetworkReply_DEFAULT NULL

#define particle_ctrl_mesh_GetNetworkInfoRequest_FIELDLIST(X, a) \

#define particle_ctrl_mesh_GetNetworkInfoRequest_CALLBACK NULL
#define particle_ctrl_mesh_GetNetworkInfoRequest_DEFAULT NULL

#define particle_ctrl_mesh_GetNetworkInfoReply_FIELDLIST(X, a) \
X(a, STATIC,   OPTIONAL, MESSAGE,  network,           1)
#define particle_ctrl_mesh_GetNetworkInfoReply_CALLBACK NULL
#define particle_ctrl_mesh_GetNetworkInfoReply_DEFAULT NULL
#define particle_ctrl_mesh_GetNetworkInfoReply_network_MSGTYPE particle_ctrl_mesh_NetworkInfo

#define particle_ctrl_mesh_ScanNetworksRequest_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, UINT32,   duration,          1)
#define particle_ctrl_mesh_ScanNetworksRequest_CALLBACK NULL
#define particle_ctrl_mesh_ScanNetworksRequest_DEFAULT NULL

#define particle_ctrl_mesh_ScanNetworksReply_FIELDLIST(X, a) \
X(a, CALLBACK, REPEATED, MESSAGE,  networks,          1)
#define particle_ctrl_mesh_ScanNetworksReply_CALLBACK pb_default_field_callback
#define particle_ctrl_mesh_ScanNetworksReply_DEFAULT NULL
#define particle_ctrl_mesh_ScanNetworksReply_networks_MSGTYPE particle_ctrl_mesh_NetworkInfo

#define particle_ctrl_mesh_DiagnosticInfo_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, BYTES,    ext_mac_address,   1) \
X(a, STATIC,   SINGULAR, UINT32,   rloc,              2) \
X(a, STATIC,   SINGULAR, UINT32,   mode,              3) \
X(a, STATIC,   SINGULAR, UINT32,   timeout,           4) \
X(a, STATIC,   OPTIONAL, MESSAGE,  connectivity,      5) \
X(a, STATIC,   OPTIONAL, MESSAGE,  route64,           6) \
X(a, STATIC,   OPTIONAL, MESSAGE,  leader_data,       7) \
X(a, STATIC,   OPTIONAL, MESSAGE,  network_data,      8) \
X(a, CALLBACK, REPEATED, MESSAGE,  ipv6_address_list,   9) \
X(a, STATIC,   OPTIONAL, MESSAGE,  mac_counters,     10) \
X(a, STATIC,   SINGULAR, UINT32,   battery_level,    15) \
X(a, STATIC,   SINGULAR, UINT32,   supply_voltage,   16) \
X(a, STATIC,   OPTIONAL, MESSAGE,  child_table,      17) \
X(a, STATIC,   SINGULAR, BYTES,    channel_pages,    18) \
X(a, CALLBACK, REPEATED, UENUM,    type_list,        19) \
X(a, STATIC,   SINGULAR, UINT32,   max_child_timeout,  20) \
X(a, STATIC,   SINGULAR, BYTES,    device_id,       100)
#define particle_ctrl_mesh_DiagnosticInfo_CALLBACK pb_default_field_callback
#define particle_ctrl_mesh_DiagnosticInfo_DEFAULT NULL
#define particle_ctrl_mesh_DiagnosticInfo_connectivity_MSGTYPE particle_ctrl_mesh_DiagnosticInfo_Connectivity
#define particle_ctrl_mesh_DiagnosticInfo_route64_MSGTYPE particle_ctrl_mesh_DiagnosticInfo_Route64
#define particle_ctrl_mesh_DiagnosticInfo_leader_data_MSGTYPE particle_ctrl_mesh_DiagnosticInfo_LeaderData
#define particle_ctrl_mesh_DiagnosticInfo_network_data_MSGTYPE particle_ctrl_mesh_DiagnosticInfo_NetworkData
#define particle_ctrl_mesh_DiagnosticInfo_ipv6_address_list_MSGTYPE particle_ctrl_Ipv6Address
#define particle_ctrl_mesh_DiagnosticInfo_mac_counters_MSGTYPE particle_ctrl_mesh_DiagnosticInfo_MacCounters
#define particle_ctrl_mesh_DiagnosticInfo_child_table_MSGTYPE particle_ctrl_mesh_DiagnosticInfo_ChildTable

#define particle_ctrl_mesh_DiagnosticInfo_Connectivity_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, UINT32,   parent_priority,   1) \
X(a, STATIC,   SINGULAR, UINT32,   link_quality_1,    2) \
X(a, STATIC,   SINGULAR, UINT32,   link_quality_2,    3) \
X(a, STATIC,   SINGULAR, UINT32,   link_quality_3,    4) \
X(a, STATIC,   SINGULAR, UINT32,   leader_cost,       5) \
X(a, STATIC,   SINGULAR, UINT32,   id_sequence,       6) \
X(a, STATIC,   SINGULAR, UINT32,   active_routers,    7) \
X(a, STATIC,   SINGULAR, UINT32,   sed_buffer_size,   8) \
X(a, STATIC,   SINGULAR, UINT32,   sed_datagram_count,   9)
#define particle_ctrl_mesh_DiagnosticInfo_Connectivity_CALLBACK NULL
#define particle_ctrl_mesh_DiagnosticInfo_Connectivity_DEFAULT NULL

#define particle_ctrl_mesh_DiagnosticInfo_Route64_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, UINT32,   id_sequence,       1) \
X(a, CALLBACK, REPEATED, MESSAGE,  routes,            2)
#define particle_ctrl_mesh_DiagnosticInfo_Route64_CALLBACK pb_default_field_callback
#define particle_ctrl_mesh_DiagnosticInfo_Route64_DEFAULT NULL
#define particle_ctrl_mesh_DiagnosticInfo_Route64_routes_MSGTYPE particle_ctrl_mesh_DiagnosticInfo_Route64_RouteData

#define particle_ctrl_mesh_DiagnosticInfo_Route64_RouteData_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, UINT32,   router_rloc,       1) \
X(a, STATIC,   SINGULAR, UINT32,   link_quality_out,   2) \
X(a, STATIC,   SINGULAR, UINT32,   link_quality_in,   3) \
X(a, STATIC,   SINGULAR, UINT32,   route_cost,        4)
#define particle_ctrl_mesh_DiagnosticInfo_Route64_RouteData_CALLBACK NULL
#define particle_ctrl_mesh_DiagnosticInfo_Route64_RouteData_DEFAULT NULL

#define particle_ctrl_mesh_DiagnosticInfo_LeaderData_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, UINT32,   partition_id,      1) \
X(a, STATIC,   SINGULAR, UINT32,   weighting,         2) \
X(a, STATIC,   SINGULAR, UINT32,   data_version,      3) \
X(a, STATIC,   SINGULAR, UINT32,   stable_data_version,   4) \
X(a, STATIC,   SINGULAR, UINT32,   leader_rloc,       5)
#define particle_ctrl_mesh_DiagnosticInfo_LeaderData_CALLBACK NULL
#define particle_ctrl_mesh_DiagnosticInfo_LeaderData_DEFAULT NULL

#define particle_ctrl_mesh_DiagnosticInfo_NetworkData_FIELDLIST(X, a) \
X(a, STATIC,   OPTIONAL, MESSAGE,  stable,            1) \
X(a, STATIC,   OPTIONAL, MESSAGE,  temporary,         2)
#define particle_ctrl_mesh_DiagnosticInfo_NetworkData_CALLBACK NULL
#define particle_ctrl_mesh_DiagnosticInfo_NetworkData_DEFAULT NULL
#define particle_ctrl_mesh_DiagnosticInfo_NetworkData_stable_MSGTYPE particle_ctrl_mesh_DiagnosticInfo_NetworkData_Data
#define particle_ctrl_mesh_DiagnosticInfo_NetworkData_temporary_MSGTYPE particle_ctrl_mesh_DiagnosticInfo_NetworkData_Data

#define particle_ctrl_mesh_DiagnosticInfo_NetworkData_HasRoute_FIELDLIST(X, a) \
X(a, CALLBACK, REPEATED, MESSAGE,  entries,           1)
#define particle_ctrl_mesh_DiagnosticInfo_NetworkData_HasRoute_CALLBACK pb_default_field_callback
#define particle_ctrl_mesh_DiagnosticInfo_NetworkData_HasRoute_DEFAULT NULL
#define particle_ctrl_mesh_DiagnosticInfo_NetworkData_HasRoute_entries_MSGTYPE particle_ctrl_mesh_DiagnosticInfo_NetworkData_HasRoute_HasRouteEntry

#define particle_ctrl_mesh_DiagnosticInfo_NetworkData_HasRoute_HasRouteEntry_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, UINT32,   rloc,              1) \
X(a, STATIC,   SINGULAR, ENUM,     preference,        2)
#define particle_ctrl_mesh_DiagnosticInfo_NetworkData_HasRoute_HasRouteEntry_CALLBACK NULL
#define particle_ctrl_mesh_DiagnosticInfo_NetworkData_HasRoute_HasRouteEntry_DEFAULT NULL

#define particle_ctrl_mesh_DiagnosticInfo_NetworkData_BorderRouter_FIELDLIST(X, a) \
X(a, CALLBACK, REPEATED, MESSAGE,  entries,           1)
#define particle_ctrl_mesh_DiagnosticInfo_NetworkData_BorderRouter_CALLBACK pb_default_field_callback
#define particle_ctrl_mesh_DiagnosticInfo_NetworkData_BorderRouter_DEFAULT NULL
#define particle_ctrl_mesh_DiagnosticInfo_NetworkData_BorderRouter_entries_MSGTYPE particle_ctrl_mesh_DiagnosticInfo_NetworkData_BorderRouter_BorderRouterEntry

#define particle_ctrl_mesh_DiagnosticInfo_NetworkData_BorderRouter_BorderRouterEntry_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, UINT32,   rloc,              1) \
X(a, STATIC,   SINGULAR, ENUM,     preference,        2) \
X(a, STATIC,   SINGULAR, UINT32,   flags,             3)
#define particle_ctrl_mesh_DiagnosticInfo_NetworkData_BorderRouter_BorderRouterEntry_CALLBACK NULL
#define particle_ctrl_mesh_DiagnosticInfo_NetworkData_BorderRouter_BorderRouterEntry_DEFAULT NULL

#define particle_ctrl_mesh_DiagnosticInfo_NetworkData_Context_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, UINT32,   cid,               1) \
X(a, STATIC,   SINGULAR, BOOL,     compress,          2) \
X(a, STATIC,   SINGULAR, UINT32,   context_length,    3)
#define particle_ctrl_mesh_DiagnosticInfo_NetworkData_Context_CALLBACK NULL
#define particle_ctrl_mesh_DiagnosticInfo_NetworkData_Context_DEFAULT NULL

#define particle_ctrl_mesh_DiagnosticInfo_NetworkData_Prefix_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, UINT32,   domain_id,         1) \
X(a, STATIC,   SINGULAR, UINT32,   prefix_length,     2) \
X(a, STATIC,   SINGULAR, BYTES,    prefix,            3) \
X(a, CALLBACK, REPEATED, MESSAGE,  context,           4) \
X(a, STATIC,   OPTIONAL, MESSAGE,  has_route,         5) \
X(a, STATIC,   OPTIONAL, MESSAGE,  border_router,     6)
#define particle_ctrl_mesh_DiagnosticInfo_NetworkData_Prefix_CALLBACK pb_default_field_callback
#define particle_ctrl_mesh_DiagnosticInfo_NetworkData_Prefix_DEFAULT NULL
#define particle_ctrl_mesh_DiagnosticInfo_NetworkData_Prefix_context_MSGTYPE particle_ctrl_mesh_DiagnosticInfo_NetworkData_Context
#define particle_ctrl_mesh_DiagnosticInfo_NetworkData_Prefix_has_route_MSGTYPE particle_ctrl_mesh_DiagnosticInfo_NetworkData_HasRoute
#define particle_ctrl_mesh_DiagnosticInfo_NetworkData_Prefix_border_router_MSGTYPE particle_ctrl_mesh_DiagnosticInfo_NetworkData_BorderRouter

#define particle_ctrl_mesh_DiagnosticInfo_NetworkData_Server_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, UINT32,   rloc,              1) \
X(a, CALLBACK, SINGULAR, BYTES,    data,              2)
#define particle_ctrl_mesh_DiagnosticInfo_NetworkData_Server_CALLBACK pb_default_field_callback
#define particle_ctrl_mesh_DiagnosticInfo_NetworkData_Server_DEFAULT NULL

#define particle_ctrl_mesh_DiagnosticInfo_NetworkData_Service_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, UINT32,   sid,               1) \
X(a, STATIC,   SINGULAR, UINT32,   enterprise_number,   2) \
X(a, CALLBACK, SINGULAR, BYTES,    data,              3) \
X(a, CALLBACK, REPEATED, MESSAGE,  servers,           4)
#define particle_ctrl_mesh_DiagnosticInfo_NetworkData_Service_CALLBACK pb_default_field_callback
#define particle_ctrl_mesh_DiagnosticInfo_NetworkData_Service_DEFAULT NULL
#define particle_ctrl_mesh_DiagnosticInfo_NetworkData_Service_servers_MSGTYPE particle_ctrl_mesh_DiagnosticInfo_NetworkData_Server

#define particle_ctrl_mesh_DiagnosticInfo_NetworkData_Data_FIELDLIST(X, a) \
X(a, CALLBACK, REPEATED, MESSAGE,  prefixes,          1) \
X(a, CALLBACK, REPEATED, MESSAGE,  services,          2)
#define particle_ctrl_mesh_DiagnosticInfo_NetworkData_Data_CALLBACK pb_default_field_callback
#define particle_ctrl_mesh_DiagnosticInfo_NetworkData_Data_DEFAULT NULL
#define particle_ctrl_mesh_DiagnosticInfo_NetworkData_Data_prefixes_MSGTYPE particle_ctrl_mesh_DiagnosticInfo_NetworkData_Prefix
#define particle_ctrl_mesh_DiagnosticInfo_NetworkData_Data_services_MSGTYPE particle_ctrl_mesh_DiagnosticInfo_NetworkData_Service

#define particle_ctrl_mesh_DiagnosticInfo_MacCounters_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, UINT32,   if_in_unknown_protos,   1) \
X(a, STATIC,   SINGULAR, UINT32,   if_in_errors,      2) \
X(a, STATIC,   SINGULAR, UINT32,   if_out_errors,     3) \
X(a, STATIC,   SINGULAR, UINT32,   if_in_ucast_pkts,   4) \
X(a, STATIC,   SINGULAR, UINT32,   if_in_broadcast_pkts,   5) \
X(a, STATIC,   SINGULAR, UINT32,   if_in_discards,    6) \
X(a, STATIC,   SINGULAR, UINT32,   if_out_ucast_pkts,   7) \
X(a, STATIC,   SINGULAR, UINT32,   if_out_broadcast_pkts,   8) \
X(a, STATIC,   SINGULAR, UINT32,   if_out_discards,   9)
#define particle_ctrl_mesh_DiagnosticInfo_MacCounters_CALLBACK NULL
#define particle_ctrl_mesh_DiagnosticInfo_MacCounters_DEFAULT NULL

#define particle_ctrl_mesh_DiagnosticInfo_ChildTable_FIELDLIST(X, a) \
X(a, CALLBACK, REPEATED, MESSAGE,  children,          1)
#define particle_ctrl_mesh_DiagnosticInfo_ChildTable_CALLBACK pb_default_field_callback
#define particle_ctrl_mesh_DiagnosticInfo_ChildTable_DEFAULT NULL
#define particle_ctrl_mesh_DiagnosticInfo_ChildTable_children_MSGTYPE particle_ctrl_mesh_DiagnosticInfo_ChildTable_ChildEntry

#define particle_ctrl_mesh_DiagnosticInfo_ChildTable_ChildEntry_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, UINT32,   timeout,           1) \
X(a, STATIC,   SINGULAR, UINT32,   child_id,          2) \
X(a, STATIC,   SINGULAR, UINT32,   mode,              3)
#define particle_ctrl_mesh_DiagnosticInfo_ChildTable_ChildEntry_CALLBACK NULL
#define particle_ctrl_mesh_DiagnosticInfo_ChildTable_ChildEntry_DEFAULT NULL

#define particle_ctrl_mesh_GetNetworkDiagnosticsRequest_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, UINT32,   flags,             1) \
X(a, CALLBACK, REPEATED, UENUM,    diagnostic_types,   2) \
X(a, STATIC,   SINGULAR, UINT32,   timeout,           3)
#define particle_ctrl_mesh_GetNetworkDiagnosticsRequest_CALLBACK pb_default_field_callback
#define particle_ctrl_mesh_GetNetworkDiagnosticsRequest_DEFAULT NULL

#define particle_ctrl_mesh_GetNetworkDiagnosticsReply_FIELDLIST(X, a) \
X(a, CALLBACK, REPEATED, MESSAGE,  nodes,             1)
#define particle_ctrl_mesh_GetNetworkDiagnosticsReply_CALLBACK pb_default_field_callback
#define particle_ctrl_mesh_GetNetworkDiagnosticsReply_DEFAULT NULL
#define particle_ctrl_mesh_GetNetworkDiagnosticsReply_nodes_MSGTYPE particle_ctrl_mesh_DiagnosticInfo

extern const pb_msgdesc_t particle_ctrl_mesh_NetworkInfo_msg;
extern const pb_msgdesc_t particle_ctrl_mesh_AuthRequest_msg;
extern const pb_msgdesc_t particle_ctrl_mesh_AuthReply_msg;
extern const pb_msgdesc_t particle_ctrl_mesh_CreateNetworkRequest_msg;
extern const pb_msgdesc_t particle_ctrl_mesh_CreateNetworkReply_msg;
extern const pb_msgdesc_t particle_ctrl_mesh_StartCommissionerRequest_msg;
extern const pb_msgdesc_t particle_ctrl_mesh_StartCommissionerReply_msg;
extern const pb_msgdesc_t particle_ctrl_mesh_StopCommissionerRequest_msg;
extern const pb_msgdesc_t particle_ctrl_mesh_StopCommissionerReply_msg;
extern const pb_msgdesc_t particle_ctrl_mesh_PrepareJoinerRequest_msg;
extern const pb_msgdesc_t particle_ctrl_mesh_PrepareJoinerReply_msg;
extern const pb_msgdesc_t particle_ctrl_mesh_AddJoinerRequest_msg;
extern const pb_msgdesc_t particle_ctrl_mesh_AddJoinerReply_msg;
extern const pb_msgdesc_t particle_ctrl_mesh_RemoveJoinerRequest_msg;
extern const pb_msgdesc_t particle_ctrl_mesh_RemoveJoinerReply_msg;
extern const pb_msgdesc_t particle_ctrl_mesh_JoinNetworkRequest_msg;
extern const pb_msgdesc_t particle_ctrl_mesh_JoinNetworkReply_msg;
extern const pb_msgdesc_t particle_ctrl_mesh_LeaveNetworkRequest_msg;
extern const pb_msgdesc_t particle_ctrl_mesh_LeaveNetworkReply_msg;
extern const pb_msgdesc_t particle_ctrl_mesh_GetNetworkInfoRequest_msg;
extern const pb_msgdesc_t particle_ctrl_mesh_GetNetworkInfoReply_msg;
extern const pb_msgdesc_t particle_ctrl_mesh_ScanNetworksRequest_msg;
extern const pb_msgdesc_t particle_ctrl_mesh_ScanNetworksReply_msg;
extern const pb_msgdesc_t particle_ctrl_mesh_DiagnosticInfo_msg;
extern const pb_msgdesc_t particle_ctrl_mesh_DiagnosticInfo_Connectivity_msg;
extern const pb_msgdesc_t particle_ctrl_mesh_DiagnosticInfo_Route64_msg;
extern const pb_msgdesc_t particle_ctrl_mesh_DiagnosticInfo_Route64_RouteData_msg;
extern const pb_msgdesc_t particle_ctrl_mesh_DiagnosticInfo_LeaderData_msg;
extern const pb_msgdesc_t particle_ctrl_mesh_DiagnosticInfo_NetworkData_msg;
extern const pb_msgdesc_t particle_ctrl_mesh_DiagnosticInfo_NetworkData_HasRoute_msg;
extern const pb_msgdesc_t particle_ctrl_mesh_DiagnosticInfo_NetworkData_HasRoute_HasRouteEntry_msg;
extern const pb_msgdesc_t particle_ctrl_mesh_DiagnosticInfo_NetworkData_BorderRouter_msg;
extern const pb_msgdesc_t particle_ctrl_mesh_DiagnosticInfo_NetworkData_BorderRouter_BorderRouterEntry_msg;
extern const pb_msgdesc_t particle_ctrl_mesh_DiagnosticInfo_NetworkData_Context_msg;
extern const pb_msgdesc_t particle_ctrl_mesh_DiagnosticInfo_NetworkData_Prefix_msg;
extern const pb_msgdesc_t particle_ctrl_mesh_DiagnosticInfo_NetworkData_Server_msg;
extern const pb_msgdesc_t particle_ctrl_mesh_DiagnosticInfo_NetworkData_Service_msg;
extern const pb_msgdesc_t particle_ctrl_mesh_DiagnosticInfo_NetworkData_Data_msg;
extern const pb_msgdesc_t particle_ctrl_mesh_DiagnosticInfo_MacCounters_msg;
extern const pb_msgdesc_t particle_ctrl_mesh_DiagnosticInfo_ChildTable_msg;
extern const pb_msgdesc_t particle_ctrl_mesh_DiagnosticInfo_ChildTable_ChildEntry_msg;
extern const pb_msgdesc_t particle_ctrl_mesh_GetNetworkDiagnosticsRequest_msg;
extern const pb_msgdesc_t particle_ctrl_mesh_GetNetworkDiagnosticsReply_msg;

/* Defines for backwards compatibility with code written before nanopb-0.4.0 */
#define particle_ctrl_mesh_NetworkInfo_fields &particle_ctrl_mesh_NetworkInfo_msg
#define particle_ctrl_mesh_AuthRequest_fields &particle_ctrl_mesh_AuthRequest_msg
#define particle_ctrl_mesh_AuthReply_fields &particle_ctrl_mesh_AuthReply_msg
#define particle_ctrl_mesh_CreateNetworkRequest_fields &particle_ctrl_mesh_CreateNetworkRequest_msg
#define particle_ctrl_mesh_CreateNetworkReply_fields &particle_ctrl_mesh_CreateNetworkReply_msg
#define particle_ctrl_mesh_StartCommissionerRequest_fields &particle_ctrl_mesh_StartCommissionerRequest_msg
#define particle_ctrl_mesh_StartCommissionerReply_fields &particle_ctrl_mesh_StartCommissionerReply_msg
#define particle_ctrl_mesh_StopCommissionerRequest_fields &particle_ctrl_mesh_StopCommissionerRequest_msg
#define particle_ctrl_mesh_StopCommissionerReply_fields &particle_ctrl_mesh_StopCommissionerReply_msg
#define particle_ctrl_mesh_PrepareJoinerRequest_fields &particle_ctrl_mesh_PrepareJoinerRequest_msg
#define particle_ctrl_mesh_PrepareJoinerReply_fields &particle_ctrl_mesh_PrepareJoinerReply_msg
#define particle_ctrl_mesh_AddJoinerRequest_fields &particle_ctrl_mesh_AddJoinerRequest_msg
#define particle_ctrl_mesh_AddJoinerReply_fields &particle_ctrl_mesh_AddJoinerReply_msg
#define particle_ctrl_mesh_RemoveJoinerRequest_fields &particle_ctrl_mesh_RemoveJoinerRequest_msg
#define particle_ctrl_mesh_RemoveJoinerReply_fields &particle_ctrl_mesh_RemoveJoinerReply_msg
#define particle_ctrl_mesh_JoinNetworkRequest_fields &particle_ctrl_mesh_JoinNetworkRequest_msg
#define particle_ctrl_mesh_JoinNetworkReply_fields &particle_ctrl_mesh_JoinNetworkReply_msg
#define particle_ctrl_mesh_LeaveNetworkRequest_fields &particle_ctrl_mesh_LeaveNetworkRequest_msg
#define particle_ctrl_mesh_LeaveNetworkReply_fields &particle_ctrl_mesh_LeaveNetworkReply_msg
#define particle_ctrl_mesh_GetNetworkInfoRequest_fields &particle_ctrl_mesh_GetNetworkInfoRequest_msg
#define particle_ctrl_mesh_GetNetworkInfoReply_fields &particle_ctrl_mesh_GetNetworkInfoReply_msg
#define particle_ctrl_mesh_ScanNetworksRequest_fields &particle_ctrl_mesh_ScanNetworksRequest_msg
#define particle_ctrl_mesh_ScanNetworksReply_fields &particle_ctrl_mesh_ScanNetworksReply_msg
#define particle_ctrl_mesh_DiagnosticInfo_fields &particle_ctrl_mesh_DiagnosticInfo_msg
#define particle_ctrl_mesh_DiagnosticInfo_Connectivity_fields &particle_ctrl_mesh_DiagnosticInfo_Connectivity_msg
#define particle_ctrl_mesh_DiagnosticInfo_Route64_fields &particle_ctrl_mesh_DiagnosticInfo_Route64_msg
#define particle_ctrl_mesh_DiagnosticInfo_Route64_RouteData_fields &particle_ctrl_mesh_DiagnosticInfo_Route64_RouteData_msg
#define particle_ctrl_mesh_DiagnosticInfo_LeaderData_fields &particle_ctrl_mesh_DiagnosticInfo_LeaderData_msg
#define particle_ctrl_mesh_DiagnosticInfo_NetworkData_fields &particle_ctrl_mesh_DiagnosticInfo_NetworkData_msg
#define particle_ctrl_mesh_DiagnosticInfo_NetworkData_HasRoute_fields &particle_ctrl_mesh_DiagnosticInfo_NetworkData_HasRoute_msg
#define particle_ctrl_mesh_DiagnosticInfo_NetworkData_HasRoute_HasRouteEntry_fields &particle_ctrl_mesh_DiagnosticInfo_NetworkData_HasRoute_HasRouteEntry_msg
#define particle_ctrl_mesh_DiagnosticInfo_NetworkData_BorderRouter_fields &particle_ctrl_mesh_DiagnosticInfo_NetworkData_BorderRouter_msg
#define particle_ctrl_mesh_DiagnosticInfo_NetworkData_BorderRouter_BorderRouterEntry_fields &particle_ctrl_mesh_DiagnosticInfo_NetworkData_BorderRouter_BorderRouterEntry_msg
#define particle_ctrl_mesh_DiagnosticInfo_NetworkData_Context_fields &particle_ctrl_mesh_DiagnosticInfo_NetworkData_Context_msg
#define particle_ctrl_mesh_DiagnosticInfo_NetworkData_Prefix_fields &particle_ctrl_mesh_DiagnosticInfo_NetworkData_Prefix_msg
#define particle_ctrl_mesh_DiagnosticInfo_NetworkData_Server_fields &particle_ctrl_mesh_DiagnosticInfo_NetworkData_Server_msg
#define particle_ctrl_mesh_DiagnosticInfo_NetworkData_Service_fields &particle_ctrl_mesh_DiagnosticInfo_NetworkData_Service_msg
#define particle_ctrl_mesh_DiagnosticInfo_NetworkData_Data_fields &particle_ctrl_mesh_DiagnosticInfo_NetworkData_Data_msg
#define particle_ctrl_mesh_DiagnosticInfo_MacCounters_fields &particle_ctrl_mesh_DiagnosticInfo_MacCounters_msg
#define particle_ctrl_mesh_DiagnosticInfo_ChildTable_fields &particle_ctrl_mesh_DiagnosticInfo_ChildTable_msg
#define particle_ctrl_mesh_DiagnosticInfo_ChildTable_ChildEntry_fields &particle_ctrl_mesh_DiagnosticInfo_ChildTable_ChildEntry_msg
#define particle_ctrl_mesh_GetNetworkDiagnosticsRequest_fields &particle_ctrl_mesh_GetNetworkDiagnosticsRequest_msg
#define particle_ctrl_mesh_GetNetworkDiagnosticsReply_fields &particle_ctrl_mesh_GetNetworkDiagnosticsReply_msg

/* Maximum encoded size of messages (where known) */
/* particle_ctrl_mesh_NetworkInfo_size depends on runtime parameters */
/* particle_ctrl_mesh_AuthRequest_size depends on runtime parameters */
/* particle_ctrl_mesh_CreateNetworkRequest_size depends on runtime parameters */
/* particle_ctrl_mesh_CreateNetworkReply_size depends on runtime parameters */
/* particle_ctrl_mesh_PrepareJoinerRequest_size depends on runtime parameters */
/* particle_ctrl_mesh_PrepareJoinerReply_size depends on runtime parameters */
/* particle_ctrl_mesh_AddJoinerRequest_size depends on runtime parameters */
/* particle_ctrl_mesh_RemoveJoinerRequest_size depends on runtime parameters */
/* particle_ctrl_mesh_GetNetworkInfoReply_size depends on runtime parameters */
/* particle_ctrl_mesh_ScanNetworksReply_size depends on runtime parameters */
/* particle_ctrl_mesh_DiagnosticInfo_size depends on runtime parameters */
/* particle_ctrl_mesh_DiagnosticInfo_Route64_size depends on runtime parameters */
/* particle_ctrl_mesh_DiagnosticInfo_NetworkData_size depends on runtime parameters */
/* particle_ctrl_mesh_DiagnosticInfo_NetworkData_HasRoute_size depends on runtime parameters */
/* particle_ctrl_mesh_DiagnosticInfo_NetworkData_BorderRouter_size depends on runtime parameters */
/* particle_ctrl_mesh_DiagnosticInfo_NetworkData_Prefix_size depends on runtime parameters */
/* particle_ctrl_mesh_DiagnosticInfo_NetworkData_Server_size depends on runtime parameters */
/* particle_ctrl_mesh_DiagnosticInfo_NetworkData_Service_size depends on runtime parameters */
/* particle_ctrl_mesh_DiagnosticInfo_NetworkData_Data_size depends on runtime parameters */
/* particle_ctrl_mesh_DiagnosticInfo_ChildTable_size depends on runtime parameters */
/* particle_ctrl_mesh_GetNetworkDiagnosticsRequest_size depends on runtime parameters */
/* particle_ctrl_mesh_GetNetworkDiagnosticsReply_size depends on runtime parameters */
#define particle_ctrl_mesh_AddJoinerReply_size   0
#define particle_ctrl_mesh_AuthReply_size        0
#define particle_ctrl_mesh_DiagnosticInfo_ChildTable_ChildEntry_size 18
#define particle_ctrl_mesh_DiagnosticInfo_Connectivity_size 54
#define particle_ctrl_mesh_DiagnosticInfo_LeaderData_size 30
#define particle_ctrl_mesh_DiagnosticInfo_MacCounters_size 54
#define particle_ctrl_mesh_DiagnosticInfo_NetworkData_BorderRouter_BorderRouterEntry_size 23
#define particle_ctrl_mesh_DiagnosticInfo_NetworkData_Context_size 14
#define particle_ctrl_mesh_DiagnosticInfo_NetworkData_HasRoute_HasRouteEntry_size 17
#define particle_ctrl_mesh_DiagnosticInfo_Route64_RouteData_size 24
#define particle_ctrl_mesh_GetNetworkInfoRequest_size 0
#define particle_ctrl_mesh_JoinNetworkReply_size 0
#define particle_ctrl_mesh_JoinNetworkRequest_size 6
#define particle_ctrl_mesh_LeaveNetworkReply_size 0
#define particle_ctrl_mesh_LeaveNetworkRequest_size 0
#define particle_ctrl_mesh_RemoveJoinerReply_size 0
#define particle_ctrl_mesh_ScanNetworksRequest_size 6
#define particle_ctrl_mesh_StartCommissionerReply_size 0
#define particle_ctrl_mesh_StartCommissionerRequest_size 6
#define particle_ctrl_mesh_StopCommissionerReply_size 0
#define particle_ctrl_mesh_StopCommissionerRequest_size 0

#ifdef __cplusplus
} /* extern "C" */
#endif

#endif
